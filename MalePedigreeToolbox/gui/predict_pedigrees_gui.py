import PySimpleGUI as sg

from MalePedigreeToolbox.gui.gui_parts import TextLabel, Frame
from MalePedigreeToolbox.gui.gui_constants import LINE_LENGTH, HALFWAY_START_NR


sg.theme("Lightgrey1")


draw_pedigree_frame = Frame(
    "Create dendrograms",
    layout=[
        [sg.Text("This module will draw dendrograms for each pedigree based on the pairwise mutations. These"
                 " dendrograms can help to determine the position of an unknown patrilineal relative in a pedigree."
                 " The dendrograms can also be used in population genetics. The dendrograms can be weighted by"
                 " providing a file with the mutation rates of the included Y-STRs.", size=(LINE_LENGTH, 5))],
        [TextLabel("Full marker file"),
         sg.InputText(size=(HALFWAY_START_NR, 1), key="full_marker_dp"),
         sg.FileBrowse(key="full_marker_dp")],
        [sg.Text(
            "An output file generated by the pairwise mutation module (full_out.csv)",
            size=(LINE_LENGTH, 2)
        )],
        [TextLabel("Mutation rate file (optional)"),
         sg.InputText(size=(HALFWAY_START_NR, 1), key="marker_rate_dp"),
         sg.FileBrowse(key="marker_rate_dp")],
        [sg.Text(
            "A .csv file with two columns containing the marker name and mutation rate of each Y-STR.",
            size=(LINE_LENGTH, 2)
        )],
        [TextLabel("Include optimal clustering"),
         sg.Checkbox(
             "",
             key=f'clusters_dp',
             enable_events=True)],
        [sg.Text(
            "Check the box if you want to color the optimal number of clusters in the dendrogram based on silhoute "
            "score",
            size=(LINE_LENGTH, 2)
        )],
        [TextLabel("Output folder"),
         sg.InputText(key="output_dp", size=(HALFWAY_START_NR, 1)),
         sg.FolderBrowse(key="output_dp")],
        [sg.Text(
            "Output directory for all files.",
            size=(LINE_LENGTH, 1)
        )]
    ],
)

layout = [[draw_pedigree_frame]]
